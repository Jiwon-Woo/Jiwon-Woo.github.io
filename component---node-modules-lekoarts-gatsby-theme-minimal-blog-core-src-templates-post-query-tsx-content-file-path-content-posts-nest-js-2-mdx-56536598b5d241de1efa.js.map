{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-nest-js-2-mdx-56536598b5d241de1efa.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/NestJS/2.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    h4: \"h4\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    blockquote: \"blockquote\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"NestJS - main.ts\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"import { NestFactory } from '@nestjs/core';\\nimport { AppModule } from './app.module';\\nimport { Logger } from '@nestjs/common';\\n\\nasync function bootstrap() {\\n  const app = await NestFactory.create(AppModule);\\n\\n  ...\\n\\n  // cors 설정\\n  app.enableCors({\\n    origin: [process.env.FRONT_URL],\\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\\n    credentials: true,\\n  });\\n\\n  // cookie 설정\\n  app.use(cookieParser());\\n\\n  ...\\n\\n  const port = process.env.BACK_PORT || 9999;\\n  await app.listen(port);\\n  Logger.log(`Server running on ${port}`);\\n}\\nbootstrap();\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h3, null, \"Cookie\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npm install cookie-parser @types/cookie-parser\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"app.use(cookieParser());\\n\")), \"\\n\", React.createElement(_components.p, null, \"다음과 같이 \", React.createElement(_components.code, null, \"cookie-parser\"), \" 패키지를 다운받고 쿠키 설정을 해주면, 브라우저로부터 받은 쿠키를 분석할 수 있게 된다.\"), \"\\n\", React.createElement(_components.p, null, \"만약 프록시 서버를 사용하여 CORS 설정을 사용할 필요가 없다면, 위의 두줄만으로 쿠키를 쓸 수 있다. 그러나 만약 CORS 설정을 해주었다면, 쿠키를 사용하기 위해서는 추가적인 옵션 설정이 필요하다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h3, null, \"CORS\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"app.enableCors({\\n  origin: [process.env.FRONT_URL],\\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\\n  credentials: true,\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"사실 옵션없이 \", React.createElement(_components.code, null, \"app.enableCors()\"), \" 만 사용해도 CORS 에러 자체는 해결이 가능하다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 위에서 언급했던 쿠키 사용을 위해 \", React.createElement(_components.code, null, \"origin\"), \" 과 \", React.createElement(_components.code, null, \"credentials\"), \" 옵션을 사용해주었다. 쿠키를 사용하고 싶다면 \", React.createElement(_components.code, null, \"credential\"), \" 은 \", React.createElement(_components.code, null, \"true\"), \" 로 해주고, \", React.createElement(_components.code, null, \"origin\"), \" 은 쿠키를 받아올 주소를 적어준다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"origin\"), \" 옵션은 배열도 가능하므로, 여러 주소를 한번에 넣을 수도 있다. 다만 주의할 점은 쿠키를 사용하기 위해서는 '*'로 설정해선 안된다는 점이다. 그 이유는 아래에 기술한다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h3, null, \"withCredentials\"), \"\\n\", React.createElement(_components.p, null, \"마지막으로 프론트에서도 백엔드에 쿠키를 사용하는 api, 즉 인증정보를 포함한 요청을 할 때마다 \", React.createElement(_components.code, null, \"withCredentials\"), \" 옵션을 사용해야한다. (서버 설정 다해두고 이걸 안해줘서 삽질한 기억이 있다...)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"...\\n\\nawait axios\\n  .post(\\n    \\\"/api/users/me\\\",\\n    {\\n      ...\\n    },\\n    { withCredentials: true }\\n  )\\n\\n...\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, null, \"CORS 동작 시나리오\"), \"\\n\", React.createElement(_components.p, null, \"CORS의 동작 방식은 3가지가 있다.\\n그 중 위에서 서술한 cookie와 같이 인증 정보가 포함된 요청은 3가지 중 \", React.createElement(_components.strong, null, \"Credentialed Request\"), \"와 관련이 깊다.\\n3가지 시나리오를 간단히 소개하겠다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h4, null, \"Preflight Request\"), \"\\n\", React.createElement(_components.p, null, \"웹개발을 할때 가장 많이 만나게 되는 방식이다.\\n해당 시나리오에서 브라우저는 본 요청을 바로 보내지 않고 브라우저가 예비 요청을 보내 스스로 안전한 요청인지 확인한 후 본 요청을 보낸다. 예비 요청은 http 메소드 중 \", React.createElement(_components.code, null, \"OPTIONS\"), \" 메소드를 사용한다. 이때 예비 요청의 성공여부보단 응답 헤더의 \", React.createElement(_components.code, null, \"Access-Control-Allow-Origin\"), \" 값이 더 중요하다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h4, null, \"Simple Request\"), \"\\n\", React.createElement(_components.p, null, \"해당 시나리오는 예비 요청 없이 본 요청을 바로 보낸 다음 브라우저가 \", React.createElement(_components.code, null, \"Access-Control-Allow-Origin\"), \" 을 보고 판단하는 방식이다. 하지만 이렇게 본 요청을 바로 보내는 것은 꽤나 까다로운 조건이 필요하다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h4, null, \"Credentialed Request\"), \"\\n\", React.createElement(_components.p, null, \"마지막은 인증된 요청에 대한 시나리오로, 교차 출처 통신에서 보안을 강화하고 싶을 때 사용하는 방법이다. 이제까지 우리가 다룬 cookie를 사용할 때 쓴다.\"), \"\\n\", React.createElement(_components.p, null, \"기본적으로 브라우저가 제공하는 리소스 요청 API인 \", React.createElement(_components.code, null, \"XMLHttpRequest\"), \" 객체나 \", React.createElement(_components.code, null, \"fetch\"), \" API는 별도의 옵션 없이 브라우저의 쿠키 정보나 인증과 관련된 헤더를 함부로 요청에 담지 않는다. 이때 요청에 인증과 관련된 정보를 담을 수 있게 해주는 옵션이 \", React.createElement(_components.code, null, \"credentials\"), \" 이다.  \", React.createElement(_components.code, null, \"credentials\"), \" 옵션에는 3가지가 있다.\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, \"옵션 값\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"same-origin\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"같은 출처 간 요청에만 인증 정보를 담을 수 있다\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"include\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"모든 요청에 인증 정보를 담을 수 있다\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"omit\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"모든 요청에 인증 정보를 담지 않는다\")))), \"\\n\", React.createElement(_components.p, null, \"만약 same-origin이나 include를 사용하여 요청에 인증정보를 포함하게 된다면, 브라우저는  \", React.createElement(_components.code, null, \"Access-Control-Allow-Origin\"), \" 뿐만 아니라 다른 항목도 좀 더 까다롭게 확인한다.\"), \"\\n\", React.createElement(_components.p, null, \"요청에 인증정보가 담길 때에는 서버의 응답 헤더 \", React.createElement(_components.code, null, \"Access-Control-Allow-Origin\"), \" 필드에 \", React.createElement(_components.code, null, \"*(와일드 카드)\"), \" 를 사용하는 것도 금지되며, 어떤 출처를 허용할 것인지 정확히 명시해두어야한다. 그리고 응답 헤더에 반드시 \", React.createElement(_components.code, null, \"Access-Control-Allow-Credentials: true\"), \" 가 존재해야한다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h3, null, \"간단한 회고\"), \"\\n\", React.createElement(_components.p, null, \"CORS 동작 방식에 대한 이론을 좀 더 빨리 알았더라면, 그 때 withCredentials 때문에 삽질할 일은 줄 일 수 있었을텐데... 하는 생각이 들었다.\\n다시금 CS 지식에 대한 중요성을 깨닫는다..!\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h3, null, \"참고\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://inpa.tistory.com/entry/AXIOS-%F0%9F%93%9A-CORS-%EC%BF%A0%ED%82%A4-%EC%A0%84%EC%86%A1withCredentials-%EC%98%B5%EC%85%98\"\n  }, \"🍪 CORS 쿠키 전송하기 (withCredentials 옵션)\"), \"\\n\", React.createElement(\"br\"), React.createElement(_components.a, {\n    href: \"https://velog.io/@suasue/NestJS-CORS-%EC%84%A4%EC%A0%95\"\n  }, \"NestJS | CORS 설정\"), \"\\n\", React.createElement(\"br\"), React.createElement(_components.a, {\n    href: \"https://codegear.tistory.com/78\"\n  }, \"NestJS - 17. 쿠키 다루기(JWT토큰)\"), \"\\n\", React.createElement(\"br\"), React.createElement(_components.a, {\n    href: \"https://snupi.tistory.com/210\"\n  }, \"[Network] What is CORS\"), \"\\n\", React.createElement(\"br\"), React.createElement(_components.a, {\n    href: \"https://jhyonhyon.tistory.com/39\"\n  }, \"[보안] CORS 란? CORS 에러란?\"), \"\\n\", React.createElement(\"br\"), React.createElement(_components.a, {\n    href: \"https://evan-moon.github.io/2020/05/21/about-cors/\"\n  }, \"CORS는 왜 이렇게 우리를 힘들게 하는걸까?\"), \"\\n\", React.createElement(\"br\"), React.createElement(_components.a, {\n    href: \"https://cornpip.tistory.com/40\"\n  }, \"쿠키(cookie), 서버 - 클라이언트 set-cookie 에러 사항들\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/jwoo/Desktop/Jiwon-Woo.github.io/content/posts/NestJS/2.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h3","pre","code","p","h2","strong","h4","table","thead","tr","th","tbody","td","blockquote","_provideComponents","components","className","align","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}